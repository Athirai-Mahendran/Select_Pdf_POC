using SelectPdf;
using System;
using System.Drawing;
using System.IO;

namespace Select_Pdf_POC
{
    public class Program
    {
        static void Main(string[] args)
        {
            //C:\Users\home\source\repos\Select_Pdf_POC\Content
            string localHtmlFilePath = @"C:\Users\home\source\repos\Select_Pdf_POC\Content\SampleHTML.html";
            //"D:\\Users\\home\\source\\repos\\Select_Pdf_POC\\Content\\SelectPdfDemo.html"

            //string localHtmlFilePath = @"D:\Select.PDF_POC\SelectPdfDemo.html";
            if (!File.Exists(localHtmlFilePath))
            {
                Console.WriteLine("File not found: " + localHtmlFilePath);
                return;
            }
            // Convert the file path to a proper URI
            //string fileUri = new Uri(localHtmlFilePath).AbsoluteUri;
            string htmlContent = File.ReadAllText(localHtmlFilePath);

            try
            {
                // Create an instance of the HTML to PDF converter
                HtmlToPdf converter = new HtmlToPdf();

                // Basic Page Setup
                converter.Options.PdfPageSize = PdfPageSize.A4;
                converter.Options.PdfPageOrientation = PdfPageOrientation.Portrait;
                converter.Options.MarginTop = 20;    // Adjust space for header
                converter.Options.MarginBottom = 20; // Adjust space for footer
                converter.Options.MarginLeft = 40;
                converter.Options.MarginRight = 40;

                // 1. Simple HTML Header and Footer
                converter.Options.DisplayHeader = true;
                converter.Header.Height = 50;
                converter.Header.FirstPageNumber = 1;
                converter.Options.DisplayFooter = true;
                converter.Footer.Height = 10;

                // Convert HTML string to PDF
                PdfDocument doc = converter.ConvertHtmlString(htmlContent);

                // create a new pdf font
                PdfFont font2 = doc.AddFont(PdfStandardFont.Helvetica);
                font2.Size = 12;
                font2.IsUnderline = true;

                // get image path
                string imgFile = @"C:\Users\home\source\repos\Select_Pdf_POC\Content\images\desk.jpg";

                // header template (100 points in height) with image element
                doc.Header = doc.AddTemplate(doc.Pages[0].ClientRectangle.Width, 100);
                PdfImageElement img1 = new PdfImageElement(20, 20, imgFile);
                doc.Header.Add(img1);

//alignment
                //PdfImageElement logo = new PdfImageElement(10, 10, 80, 40, imgFile); // (x, y, width, height)
                //doc.Header.Add(logo);

                doc.Footer = doc.AddTemplate(doc.Pages[0].ClientRectangle.Width, 100);
                PdfTextElement text = new PdfTextElement(0, 50,
                    "Footer text: Document generated by Select.Pdf", font2);
                text.ForeColor = Color.Brown;
                doc.Footer.Add(text);

                // Save the PDF document to a file
                string outputFilePath = "D:\\Select.PDF_POC\\PDF\\output_SampleHtml69.pdf";
                doc.Save(outputFilePath);

                // Close the document
                doc.Close();

                Console.WriteLine("PDF successfully created at: " + outputFilePath);
            }
            catch (Exception ex)
            {
                Console.WriteLine("An error occurred: " + ex.Message);
            }

            Console.ReadLine();
        }

        //HtmlToPdf converter = new HtmlToPdf();
        //PdfDocument doc = converter.ConvertHtmlString("<h1>Hello PDF!</h1>");
        //doc.Save("output.pdf");
        //doc.Close();
        //Console.WriteLine("PDF created.");
    }

}



